# .github/workflows/build_macos.yml

name: Build macOS App

# Controls when the workflow will run
on:
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push events but only for the MASTER branch
  push:
    branches: [ master ] # Use 'master' since that's your default branch

jobs:
  build-macos:
    runs-on: macos-latest # Use the latest available macOS runner

    steps:
      # 1. Check out repository code so the workflow can access it
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # You can change this version if needed

      # 3. Install dependencies (including PyInstaller)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller # Install PyInstaller itself in the runner

      # 4. Run PyInstaller to build the .app bundle
      - name: Build macOS App with PyInstaller
        run: |
          pyinstaller --name InventorySearch \
                      --windowed \
                      --onefile \
                      --noconfirm \
                      search_inventory_gui.py
        # --name: The name of your final application bundle (InventorySearch.app)
        # --windowed: CRITICAL for macOS GUI apps. Creates a .app bundle instead of a command-line exec.
        # --onefile: Packages everything into a single executable within the .app (convenient, but can sometimes cause issues. --onedir is the alternative).
        # --noconfirm: Overwrite previous builds without asking.
        # search_inventory_gui.py: Your main Python script.

      # 5. Upload the built application as an artifact
      - name: Upload macOS App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-inventory-search-app # Name of the downloadable artifact zip file
          path: dist/InventorySearch.app # Path to the generated .app bundle within the 'dist' folder created by Pyinstaller
          if-no-files-found: error # Fail the step if the .app wasn't created
